import{r as x,u as j,j as e}from"./index-BdVnEZy5.js";import{u as g}from"./useQuery-BQEVlMt-.js";import{u as _}from"./useMutation-CPWcn1Tu.js";import{D as y}from"./DescriptionBox-DrhUbtg5.js";import"./useBaseQuery-Bqz_ihlr.js";const l=[{id:1,text:"Learn Tanstack Query basics"},{id:2,text:"Implement mutations"},{id:3,text:"Explore pagination"}];let v=4;const T=async()=>(console.log("API: Fetching todos..."),await new Promise(s=>setTimeout(s,600)),console.log("API: Todos fetched:",l),[...l]),f=async s=>{if(console.log(`API: Attempting to add todo: "${s}"`),await new Promise(i=>setTimeout(i,700)),Math.random()<.25)throw console.error("API: Failed to add todo!"),new Error("Simulated server error: Could not add todo.");const n={id:v++,text:s};return l.push(n),console.log("API: Todo added successfully:",n),console.log("API: Current todos:",l),n},w="_container_1jpgv_1",C="_descriptionColumn_1jpgv_23",I="_exampleColumn_1jpgv_33",b="_heading_1jpgv_49",F="_addForm_1jpgv_63",A="_inputField_1jpgv_75",N="_button_1jpgv_105",Q="_todoList_1jpgv_147",P="_todoItem_1jpgv_159",q="_optimistic_1jpgv_175",D="_loadingText_1jpgv_185",E="_errorText_1jpgv_199",t={container:w,descriptionColumn:C,exampleColumn:I,heading:b,addForm:F,inputField:A,button:N,todoList:Q,todoItem:P,optimistic:q,loadingText:D,errorText:E},a=["todos"],k=()=>{const[s,n]=x.useState(""),i=j(),{data:m=[],status:u,error:h}=g({queryKey:a,queryFn:T}),r=_({mutationFn:f,onMutate:async o=>{await i.cancelQueries({queryKey:a});const c=i.getQueryData(a);if(c){const d={id:`optimistic-${Date.now()}`,text:o,isOptimistic:!0};i.setQueryData(a,[...c,d])}return{previousTodos:c}},onError:(o,c,d)=>{console.error("Mutation failed:",o.message),d!=null&&d.previousTodos&&i.setQueryData(a,d.previousTodos)},onSettled:()=>{i.invalidateQueries({queryKey:a})}}),p=o=>{o.preventDefault(),s.trim()&&(r.mutate(s),n(""))};return e.jsxs("div",{className:t.container,children:[e.jsx("div",{className:t.descriptionColumn,children:e.jsxs(y,{title:"Optimistic Updates with useMutation",children:[e.jsx("p",{children:"Optimistic updates improve perceived performance by updating the UI *before* the server confirms the change. If the server update fails, the UI change is rolled back."}),e.jsxs("ul",{children:[e.jsxs("li",{children:[e.jsx("code",{children:"onMutate"}),": Runs first when"," ",e.jsx("code",{children:"mutate()"})," is called.",e.jsxs("ul",{children:[e.jsxs("li",{children:["We cancel ongoing queries for this data (",e.jsx("code",{children:"queryClient.cancelQueries"}),") to prevent conflicts."]}),e.jsxs("li",{children:["We snapshot the current data (",e.jsx("code",{children:"queryClient.getQueryData"}),")."]}),e.jsxs("li",{children:["We manually update the cache with the new item marked as optimistic (",e.jsx("code",{children:"queryClient.setQueryData"}),")."]}),e.jsx("li",{children:"We return the snapshot in the context object."})]})]}),e.jsxs("li",{children:[e.jsx("code",{children:"onError"}),": Runs if the"," ",e.jsx("code",{children:"mutationFn"})," (",e.jsx("code",{children:"addTodo"}),") throws an error.",e.jsx("ul",{children:e.jsxs("li",{children:["We use the"," ",e.jsx("code",{children:"context.previousTodos"})," snapshot returned by ",e.jsx("code",{children:"onMutate"})," to restore the cache to its pre-mutation state (",e.jsx("code",{children:"queryClient.setQueryData"}),")."]})})]}),e.jsxs("li",{children:[e.jsx("code",{children:"onSettled"}),": Runs after the mutation finishes (success or error).",e.jsx("ul",{children:e.jsxs("li",{children:["We invalidate the query (",e.jsx("code",{children:"queryClient.invalidateQueries"}),") to ensure the UI eventually syncs with the true server state, correcting any optimistic discrepancies or confirming the success."]})})]})]}),e.jsx("p",{children:"Try adding todos. Some will fail randomly (simulated API error), demonstrating the rollback."})]})}),e.jsxs("div",{className:t.exampleColumn,children:[e.jsx("h1",{className:t.heading,children:"Optimistic Todo List"}),e.jsxs("form",{onSubmit:p,className:t.addForm,children:[e.jsx("input",{type:"text",value:s,onChange:o=>n(o.target.value),placeholder:"Add a new todo...",className:t.inputField,disabled:r.isPending}),e.jsx("button",{type:"submit",className:t.button,disabled:r.isPending,children:r.isPending?"Adding...":"Add Todo"})]}),u==="pending"?e.jsx("p",{className:t.loadingText,children:"Loading todos..."}):u==="error"?e.jsxs("p",{className:t.errorText,children:["Error fetching todos: ",h.message]}):e.jsx("ul",{className:t.todoList,children:m.map(o=>e.jsxs("li",{className:`${t.todoItem} ${o.isOptimistic?t.optimistic:""}`,children:[o.text," ",o.isOptimistic&&"(Adding...)"]},o.id))}),r.isError&&e.jsxs("p",{className:t.errorText,children:["Failed to add todo: ",r.error.message]})]})]})};export{k as OptimisticTodoList};
