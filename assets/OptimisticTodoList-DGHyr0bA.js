import{r as x,u as j,j as e}from"./index-CWXJLjJA.js";import{u as g}from"./useQuery-J4Kg31OB.js";import{u as _}from"./useMutation--2iUfPAK.js";import{D as y}from"./DescriptionBox-Cjsxsok8.js";import"./useBaseQuery-DmLDYRcB.js";const l=[{id:1,text:"Learn Tanstack Query basics"},{id:2,text:"Implement mutations"},{id:3,text:"Explore pagination"}];let v=4;const T=async()=>(console.log("API: Fetching todos..."),await new Promise(o=>setTimeout(o,600)),console.log("API: Todos fetched:",l),[...l]),b=async o=>{if(console.log(`API: Attempting to add todo: "${o}"`),await new Promise(i=>setTimeout(i,700)),Math.random()<.25)throw console.error("API: Failed to add todo!"),new Error("Simulated server error: Could not add todo.");const n={id:v++,text:o};return l.push(n),console.log("API: Todo added successfully:",n),console.log("API: Current todos:",l),n},f="_container_lsvkb_1",w="_descriptionColumn_lsvkb_23",C="_exampleColumn_lsvkb_33",I="_heading_lsvkb_49",k="_addForm_lsvkb_63",F="_inputField_lsvkb_75",A="_button_lsvkb_105",N="_todoList_lsvkb_147",Q="_todoItem_lsvkb_159",P="_optimistic_lsvkb_175",q="_loadingText_lsvkb_185",D="_errorText_lsvkb_199",t={container:f,descriptionColumn:w,exampleColumn:C,heading:I,addForm:k,inputField:F,button:A,todoList:N,todoItem:Q,optimistic:P,loadingText:q,errorText:D},a=["todos"],W=()=>{const[o,n]=x.useState(""),i=j(),{data:m=[],status:u,error:h}=g({queryKey:a,queryFn:T}),r=_({mutationFn:b,onMutate:async s=>{await i.cancelQueries({queryKey:a});const c=i.getQueryData(a);if(c){const d={id:`optimistic-${Date.now()}`,text:s,isOptimistic:!0};i.setQueryData(a,[...c,d])}return{previousTodos:c}},onError:(s,c,d)=>{console.error("Mutation failed:",s.message),d!=null&&d.previousTodos&&i.setQueryData(a,d.previousTodos)},onSettled:()=>{i.invalidateQueries({queryKey:a})}}),p=s=>{s.preventDefault(),o.trim()&&(r.mutate(o),n(""))};return e.jsxs("div",{className:t.container,children:[e.jsx("div",{className:t.descriptionColumn,children:e.jsxs(y,{title:"Optimistic Updates with useMutation",children:[e.jsx("p",{children:"Optimistic updates improve perceived performance by updating the UI *before* the server confirms the change. If the server update fails, the UI change is rolled back."}),e.jsxs("ul",{children:[e.jsxs("li",{children:[e.jsx("code",{children:"onMutate"}),": Runs first when"," ",e.jsx("code",{children:"mutate()"})," is called.",e.jsxs("ul",{children:[e.jsxs("li",{children:["We cancel ongoing queries for this data (",e.jsx("code",{children:"queryClient.cancelQueries"}),") to prevent conflicts."]}),e.jsxs("li",{children:["We snapshot the current data (",e.jsx("code",{children:"queryClient.getQueryData"}),")."]}),e.jsxs("li",{children:["We manually update the cache with the new item marked as optimistic (",e.jsx("code",{children:"queryClient.setQueryData"}),")."]}),e.jsx("li",{children:"We return the snapshot in the context object."})]})]}),e.jsxs("li",{children:[e.jsx("code",{children:"onError"}),": Runs if the"," ",e.jsx("code",{children:"mutationFn"})," (",e.jsx("code",{children:"addTodo"}),") throws an error.",e.jsx("ul",{children:e.jsxs("li",{children:["We use the"," ",e.jsx("code",{children:"context.previousTodos"})," snapshot returned by ",e.jsx("code",{children:"onMutate"})," to restore the cache to its pre-mutation state (",e.jsx("code",{children:"queryClient.setQueryData"}),")."]})})]}),e.jsxs("li",{children:[e.jsx("code",{children:"onSettled"}),": Runs after the mutation finishes (success or error).",e.jsx("ul",{children:e.jsxs("li",{children:["We invalidate the query (",e.jsx("code",{children:"queryClient.invalidateQueries"}),") to ensure the UI eventually syncs with the true server state, correcting any optimistic discrepancies or confirming the success."]})})]})]}),e.jsx("p",{children:"Try adding todos. Some will fail randomly (simulated API error), demonstrating the rollback."})]})}),e.jsxs("div",{className:t.exampleColumn,children:[e.jsx("h1",{className:t.heading,children:"Optimistic Todo List"}),e.jsxs("form",{onSubmit:p,className:t.addForm,children:[e.jsx("input",{type:"text",value:o,onChange:s=>n(s.target.value),placeholder:"Add a new todo...",className:t.inputField,disabled:r.isPending}),e.jsx("button",{type:"submit",className:t.button,disabled:r.isPending,children:r.isPending?"Adding...":"Add Todo"})]}),u==="pending"?e.jsx("p",{className:t.loadingText,children:"Loading todos..."}):u==="error"?e.jsxs("p",{className:t.errorText,children:["Error fetching todos: ",h.message]}):e.jsx("ul",{className:t.todoList,children:m.map(s=>e.jsxs("li",{className:`${t.todoItem} ${s.isOptimistic?t.optimistic:""}`,children:[s.text," ",s.isOptimistic&&"(Adding...)"]},s.id))}),r.isError&&e.jsxs("p",{className:t.errorText,children:["Failed to add todo: ",r.error.message]})]})]})};export{W as OptimisticTodoList};
